# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

def configure_aws_instance(aws, override)
  override.ssh.username = "ubuntu"
  override.ssh.private_key_path = "~/.ssh/elasticdocker.pem"

  aws.access_key_id = ENV["AWS_ACCESS_KEY_ID"]
  aws.secret_access_key = ENV["AWS_SECRET_ACCESS_KEY"]
  aws.keypair_name = 'elasticdocker'

  # Manually created VPC and subnet prior to running vagrant up.
  # Make sure security group associated with subnet allows SSH.
  aws.subnet_id = "subnet-beeb15c9"
  aws.elastic_ip = true
  aws.associate_public_ip = true
end

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # Created from elastic docker base_image
  config.vm.box = "dimroc/elasticdocker-base"

  config.vm.define "server", primary: true do |server|
    server.vm.hostname = "server"
    server.vm.network "private_network", ip: "172.20.20.10"
    server.vm.provision "shell", path: 'server.sh'

    server.vm.provider :aws do |aws, override|
      configure_aws_instance(aws, override)

      aws.instance_type = "t2.micro"
      aws.block_device_mapping = [{ 'DeviceName' => '/dev/sda1', 'Ebs.VolumeSize' => 30 }]
      aws.tags = { "Name" => "ED Server" }
    end
  end

  config.vm.define "agent" do |agent|
    agent.vm.hostname = "agent"
    agent.vm.network "private_network", ip: "172.20.20.11"
    agent.vm.provision "shell", path: 'agent.sh'

    agent.vm.provider :aws do |aws, override|
      configure_aws_instance(aws, override)

      aws.instance_type = "c3.large"
      aws.tags = { "Name" => "ED Agent" }
    end
  end
end
